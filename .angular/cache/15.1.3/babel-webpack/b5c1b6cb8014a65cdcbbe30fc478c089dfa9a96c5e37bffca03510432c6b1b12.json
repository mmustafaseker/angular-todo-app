{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet TodoComponent = class TodoComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.tasks = [];\n    this.inprogress = [];\n    this.done = [];\n    this.isEditEnable = false;\n  }\n  ngOnInit() {\n    this.todoForm = this.fb.group({\n      item: ['', Validators.required]\n    });\n  }\n  addTask() {\n    this.tasks.push({\n      description: this.todoForm.value.item,\n      done: false\n    });\n    this.todoForm.reset();\n  }\n  onEdit(item, i) {\n    this.todoForm.controls['item'].setValue(item.description);\n    this.updateIndex = i;\n    this.isEditEnable = true;\n  }\n  updateTask() {\n    this.tasks[this.updateIndex].description = this.todoForm.value.item;\n    this.tasks[this.updateIndex].done = false;\n    this.todoForm.reset();\n    this.updateIndex = undefined;\n    this.isEditEnable = false;\n  }\n  deleteTask(i) {\n    this.tasks.splice(i, 1);\n  }\n  deleteInProgressTask(i) {\n    this.inprogress.splice(i, 1);\n  }\n  deleteDoneTask(i) {\n    this.done.splice(i, 1);\n  }\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n};\nTodoComponent = __decorate([Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})], TodoComponent);\nexport { TodoComponent };","map":{"version":3,"mappings":";AAAA,SAEEA,eAAe,EACfC,iBAAiB,QACZ,wBAAwB;AAC/B,SAASC,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAUxBC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAPtB,UAAK,GAAY,EAAE;IACnB,eAAU,GAAY,EAAE;IACxB,SAAI,GAAY,EAAE;IAElB,iBAAY,GAAY,KAAK;EAGS;EAEtCC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ;KAC/B,CAAC;EACJ;EAEAC,OAAO;IACL,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;MACdC,WAAW,EAAE,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAACN,IAAI;MACrCO,IAAI,EAAE;KACP,CAAC;IACF,IAAI,CAACT,QAAQ,CAACU,KAAK,EAAE;EACvB;EAEAC,MAAM,CAACT,IAAW,EAAEU,CAAS;IAC3B,IAAI,CAACZ,QAAQ,CAACa,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAACZ,IAAI,CAACK,WAAW,CAAC;IACzD,IAAI,CAACQ,WAAW,GAAGH,CAAC;IACpB,IAAI,CAACI,YAAY,GAAG,IAAI;EAC1B;EAEAC,UAAU;IACR,IAAI,CAACZ,KAAK,CAAC,IAAI,CAACU,WAAW,CAAC,CAACR,WAAW,GAAG,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAACN,IAAI;IACnE,IAAI,CAACG,KAAK,CAAC,IAAI,CAACU,WAAW,CAAC,CAACN,IAAI,GAAG,KAAK;IACzC,IAAI,CAACT,QAAQ,CAACU,KAAK,EAAE;IACrB,IAAI,CAACK,WAAW,GAAGG,SAAS;IAC5B,IAAI,CAACF,YAAY,GAAG,KAAK;EAC3B;EAEAG,UAAU,CAACP,CAAS;IAClB,IAAI,CAACP,KAAK,CAACe,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC;EACzB;EACAS,oBAAoB,CAACT,CAAS;IAC5B,IAAI,CAACU,UAAU,CAACF,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC;EAC9B;EACAW,cAAc,CAACX,CAAS;IACtB,IAAI,CAACH,IAAI,CAACW,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC;EACxB;EAEAY,IAAI,CAACC,KAA2B;IAC9B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/CnC,eAAe,CACbiC,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;KACF,MAAM;MACLrC,iBAAiB,CACfgC,KAAK,CAACC,iBAAiB,CAACE,IAAI,EAC5BH,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;;EAEL;CACD;AAlEYlC,aAAa,eALzBF,SAAS,CAAC;EACTqC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWrC,aAAa,CAkEzB;SAlEYA,aAAa","names":["moveItemInArray","transferArrayItem","Component","Validators","TodoComponent","constructor","fb","ngOnInit","todoForm","group","item","required","addTask","tasks","push","description","value","done","reset","onEdit","i","controls","setValue","updateIndex","isEditEnable","updateTask","undefined","deleteTask","splice","deleteInProgressTask","inprogress","deleteDoneTask","drop","event","previousContainer","container","data","previousIndex","currentIndex","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\MustafaProje\\angular-todo-app\\src\\app\\todo\\todo.component.ts"],"sourcesContent":["import {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ITask } from '../model/task';\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  todoForm!: FormGroup;\n\n  tasks: ITask[] = [];\n  inprogress: ITask[] = [];\n  done: ITask[] = [];\n  updateIndex!: any;\n  isEditEnable: boolean = false;\n\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.todoForm = this.fb.group({\n      item: ['', Validators.required],\n    });\n  }\n\n  addTask() {\n    this.tasks.push({\n      description: this.todoForm.value.item,\n      done: false,\n    });\n    this.todoForm.reset();\n  }\n\n  onEdit(item: ITask, i: number) {\n    this.todoForm.controls['item'].setValue(item.description);\n    this.updateIndex = i;\n    this.isEditEnable = true;\n  }\n\n  updateTask() {\n    this.tasks[this.updateIndex].description = this.todoForm.value.item;\n    this.tasks[this.updateIndex].done = false;\n    this.todoForm.reset();\n    this.updateIndex = undefined;\n    this.isEditEnable = false;\n  }\n\n  deleteTask(i: number) {\n    this.tasks.splice(i, 1);\n  }\n  deleteInProgressTask(i: number) {\n    this.inprogress.splice(i, 1);\n  }\n  deleteDoneTask(i: number) {\n    this.done.splice(i, 1);\n  }\n\n  drop(event: CdkDragDrop<ITask[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}